{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","newProject","input","document","querySelector","state","project","setState","resizeInput","value","length","style","width","addEventListener","call","removeBlink","blink","opacity","projectTitle","inputValue","dynamicInputValue","inputDefault","bind","className","this","href","icon","faArrowDown","id","htmlFor","name","for","type","defaultValue","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d3405c57.chunk.js","sourcesContent":["import './App.css';\nimport { Component, Fragment } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowDown } from '@fortawesome/free-solid-svg-icons';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      project: null,\n      inputDefault: \"name a new project\",\n      dynamicInputValue: null\n    }\n    this.newProject = this.newProject.bind(this)\n    this.projectTitle = this.projectTitle.bind(this)\n  }\n\n  newProject = () => {\n    let input = document.querySelector('input');\n    const newProject = this.state;\n    this.state.project === \"New\" ? newProject.project = null : newProject.project = \"New\";\n    this.setState(newProject);\n    let resizeInput = () => {\n      if (input.value.length === 0){\n        input.style.width = 1 + \"ch\";\n      } else {\n        input.style.width = (input.value.length * 1.1) + \"ch\";\n      }\n    }\n    input.addEventListener('input', resizeInput);\n    resizeInput.call(input);\n  }\n\n  removeBlink = () => {\n    let blink = document.querySelector(\".blink\");\n    if (blink !== null) {\n      blink.style.opacity = \"0\";\n    }\n  }\n\n  projectTitle = () => {\n    let inputValue = document.querySelector('input').value;\n    inputValue === \"name a new project\" ? this.setState({dynamicInputValue: null}) : this.setState({dynamicInputValue: inputValue});\n  }\n\n  render(){\n    return(\n      <Fragment>\n      <div className={[\"container\"] + [this.state.project]}>\n        <ul>\n            <li>\n              <h1><div className=\"arteria\">arteria</div> <div className=\"description\">— a new curatorial tool</div></h1>\n            </li>\n            <li className=\"arrow\">\n              <a href=\"#savedProjects\"><FontAwesomeIcon icon={faArrowDown} /></a>\n            </li>\n        </ul>\n        <div className=\"savedProjects\" id=\"savedProjects\">\n          <header className=\"clearfix\">\n            <h2>Saved curatorial projects</h2>\n            <div className=\"categories\"><div className=\"sortBy\">sort by</div><div className=\"description\">— <a>medium</a>, <a>culture</a>, <a>concept</a></div></div>\n          </header>\n          <div className=\"newProjects\">\n            <div className=\"createProject\">\n              + Create a new project\n            </div>\n          </div>\n        </div>\n        <div className=\"submissionForm\">\n          <div className=\"projectTitle\">\n            <h2>{this.state.dynamicInputValue}</h2>\n          </div>\n          <form>\n            <div className=\"projectDescription\">\n              <div className=\"node\">\n                <label htmlFor=\"projectDescription\"><h2>Write a Brief Description</h2></label>\n                <textarea id=\"projectDescription\" name=\"projectDescription\" />\n              </div>\n            </div>\n            <div className=\"workingBibliography\">\n              <div className=\"node\">\n                <label for=\"workingBibliography\"><h2>Working Bibliography</h2></label>\n                <textarea id=\"workingBibliography\" name=\"workingBibliography\" />\n              </div>\n            </div>\n            <div className=\"selectedArtists\">\n              <div className=\"node\">\n                <label htmlFor=\"selectedArtists\"><h2>Selected Artists</h2></label>\n                <input type=\"text\" id=\"selectedArtists\" name=\"selectedArtists\" />\n                <input type=\"text\" id=\"selectedArtists1\" name=\"selectedArtists\" />\n                <input type=\"text\" id=\"selectedArtists2\" name=\"selectedArtists\" />\n                <input type=\"text\" id=\"selectedArtists3\" name=\"selectedArtists\" />\n              </div>\n            </div>\n            <div className=\"thematicTags\">\n              <div className=\"node\">\n                <label htmlFor=\"thematicTags\"><h2>Thematic Tags</h2></label>\n                <input type=\"text\" id=\"thematicTags\" name=\"thematicTags\" defaultValue=\"#\" />\n                <input type=\"text\" id=\"thematicTags1\" name=\"thematicTags\" defaultValue=\"#\"/>\n                <input type=\"text\" id=\"thematicTags2\" name=\"thematicTags\" defaultValue=\"#\"/>\n                <input type=\"text\" id=\"thematicTags3\" name=\"thematicTags\" defaultValue=\"#\"/>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  )}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}